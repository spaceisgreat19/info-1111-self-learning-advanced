library(tidyverse)
library(plotly)
data <- read_csv("~/Documents/data 1901/NYPD.csv")
data <- data %>%
mutate(
# Convert time and extract hour
time = hms(CMPLNT_FR_TM),
hour = hour(time),
# Convert date and extract parts
date = mdy(CMPLNT_FR_DT),
day = wday(date, label = TRUE, abbr = FALSE),
month = month(date),
# Assign seasons based on month
season = case_when(
month %in% c(12, 1, 2) ~ "Winter",
month %in% c(3, 4, 5) ~ "Spring",
month %in% c(6, 7, 8) ~ "Summer",
month %in% c(9, 10, 11) ~ "Autumn"
)
) %>%
# Filter out missing values
filter(
!is.na(BORO_NM),
!is.na(CMPLNT_FR_TM),
!is.na(LAW_CAT_CD),
!is.na(date),
!is.na(day),
!is.na(season)
)
hourly_severity <- data %>%
mutate(hour = hour(hms(CMPLNT_FR_TM))) %>%
group_by(Borough = BORO_NM, hour, LAW_CAT_CD) %>%
summarise(total_crimes = n(), .groups = "drop")
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = BORO_NM)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(title = "Interactive Crime Patterns by Hour and Type")
# Render the plot interactively using ggplotly``
ggplotly(plot)
hourly_severity <- data %>%
mutate(hour = hour(hms(CMPLNT_FR_TM))) %>%
group_by(Borough = BORO_NM, hour, LAW_CAT_CD) %>%
summarise(total_crimes = n(), .groups = "drop")
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = BORO_NM)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(title = "Interactive Crime Patterns by Hour and Type")
# Render the plot interactively using ggplotly``
ggplotly(plot)
hourly_severity <- data %>%
group_by(BORO_NM, hour, LAW_CAT_CD) %>%
summarise(total_crimes = n(), .groups = "drop")
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = BORO_NM)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(title = "Interactive Crime Patterns by Hour and Type")
# Render the plot interactively using ggplotly``
ggplotly(plot)
hourly_severity <- hourly_severity %>%
rename(Borough = BORO_NM)
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
x = "Hour of Day",
y = "Total Crimes",
color = "Borough"
)
# Render interactively
ggplotly(plot)
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
x = "Hour of Day",
y = "Total Crimes",
color = "Borough"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10))  # Increase right margin for y-axis label
)
# Render interactively
ggplotly(plot)
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
y = "Total Crimes"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10)),
plot.title = element_text(margin = margin(b = 15))
)
ggplotly(plot)
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
y = "Total Crimes"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10)),
plot.title = element_text(margin = margin(b = 15))
)
ggplotly(plot)
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
x = "Hour of Day",
y = "Total Crimes",
color = "Borough"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10))  # Increase right margin for y-axis label
)
# Render interactively
ggplotly(plot)
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type
",
x = "Hour of Day",
y = "Total Crimes",
color = "Borough"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10))  # Increase right margin for y-axis label
)
# Render interactively
ggplotly(plot)
# Plotting Hourly Crime Severity
plot <- ggplot(hourly_severity, aes(x = hour, y = total_crimes, color = Borough)) +
geom_line() +
facet_wrap(~LAW_CAT_CD) +
labs(
title = "Interactive Crime Patterns by Hour and Type",
x = "Hour of Day",
y = "Total Crimes",
color = "Borough"
) +
theme(
axis.title.y = element_text(margin = margin(r = 10))  # Increase right margin for y-axis label
)
# Render interactively
ggplotly(plot)
# Categorizing Time of Day and Summarizing Data
data <- data %>%
mutate(
time_of_day = case_when(
hour >= 0 & hour < 5   ~ "Midnight",
hour >= 5 & hour < 10  ~ "Morning",
hour >= 10 & hour < 15 ~ "Midday",
hour >= 15 & hour < 20 ~ "Afternoon",
hour >= 20 & hour <= 24 ~ "Night"
),
# Make time_of_day and season as factors for better ordering
time_of_day = factor(time_of_day, levels = c("Midnight", "Morning", "Midday", "Afternoon", "Night")),
season = factor(season, levels = c("Winter", "Spring", "Summer", "Autumn"))
)
# Crime Summary by Time of Day and Season
summary_time_season <- data %>%
group_by(season, time_of_day) %>%
summarise(total_crimes = n(), .groups = "drop") %>%
mutate(
hover_text = paste0("Season: ", season,
"<br>Time of Day: ", time_of_day,
"<br>Total Crimes: ", total_crimes)
)
# Plotting Crime Frequency by Season and Time of Day
plot_ly(
data = summary_time_season,
x = ~as.character(time_of_day),
y = ~as.character(season),
size = ~total_crimes,
color = ~total_crimes,
text = ~hover_text,
hoverinfo = "text",
type = "scatter",
mode = "markers",
marker = list(
sizemode = 'diameter',
opacity = 0.75,
line = list(width = 1, color = '#FFFFFF'),
showscale = TRUE,
colorbar = list(title = "total_crimes")
)
) %>%
layout(
title = "Crime Frequency by Season and Time of Day",
xaxis = list(
title = "Time of Day",
categoryorder = "array",
categoryarray = c("Midnight", "Morning", "Midday", "Afternoon", "Night")
),
yaxis = list(
title = "Season",
categoryorder = "array",
categoryarray = c("Winter", "Spring", "Summer", "Autumn")
),
showlegend = FALSE,
margin = list(l = 60, r = 40, b = 60, t = 60),
plot_bgcolor = "#f9f9f9",
paper_bgcolor = "#f9f9f9"
)
# Plotting Crime Frequency by Season and Time of Day
plot_ly(
data = summary_time_season,
x = ~as.character(time_of_day),
y = ~as.character(season),
size = ~total_crimes,
color = ~total_crimes,
text = ~hover_text,
hoverinfo = "text",
type = "scatter",
mode = "markers",
marker = list(
sizemode = 'diameter',
opacity = 0.75,
line = list(width = 1, color = '#FFFFFF'),
showscale = TRUE,
colorbar = list(title = "total crimes")
)
) %>%
layout(
title = "Crime Frequency by Season and Time of Day",
xaxis = list(
title = "Time of Day",
categoryorder = "array",
categoryarray = c("Midnight", "Morning", "Midday", "Afternoon", "Night")
),
yaxis = list(
title = "Season",
categoryorder = "array",
categoryarray = c("Winter", "Spring", "Summer", "Autumn")
),
showlegend = FALSE,
margin = list(l = 60, r = 40, b = 60, t = 60),
plot_bgcolor = "#f9f9f9",
paper_bgcolor = "#f9f9f9"
)
# Plotting Crime Frequency by Season and Time of Day
plot_ly(
data = summary_time_season,
x = ~as.character(time_of_day),
y = ~as.character(season),
size = ~total_crimes,
color = ~total_crimes,
text = ~hover_text,
hoverinfo = "text",
type = "scatter",
mode = "markers",
marker = list(
sizemode = 'diameter',
opacity = 0.75,
line = list(width = 1, color = '#FFFFFF'),
showscale = TRUE,
colorbar = list(title = "total_crimes")
)
) %>%
layout(
title = "Crime Frequency by Season and Time of Day",
xaxis = list(
title = "Time of Day",
categoryorder = "array",
categoryarray = c("Midnight", "Morning", "Midday", "Afternoon", "Night")
),
yaxis = list(
title = "Season",
categoryorder = "array",
categoryarray = c("Winter", "Spring", "Summer", "Autumn")
),
showlegend = FALSE,
margin = list(l = 60, r = 40, b = 60, t = 60),
plot_bgcolor = "#f9f9f9",
paper_bgcolor = "#f9f9f9"
)
